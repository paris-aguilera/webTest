---
import '@fontsource-variable/alexandria';
import { Image } from 'astro:assets';

// Importaciones de im√°genes (sin cambios)
import portaImg from '../assets/portaWeb.png';
import castizaImg from '../assets/castizaWeb.png';
import casinoImg from '../assets/casinoMobile.png';
import kiuboImg from '../assets/kiuboWeb.png';

const proyectosData = [
  {
    titulo: "Kiubo",
    descripcion: "Aplicaci√≥n mobile de gesti√≥n de tareas para la tercera edad.",
    imagen: kiuboImg,
    tags: ["Figma", "Illustrator", "Photoshop", "UX UI"],
     url: `${import.meta.env.BASE_URL}/kiubo`
  },
  {
    titulo: "Portafolio",
    descripcion: "P√°gina web creada en Astro y dise√±ada por m√≠ con ‚ù§, donde muestro mis habilidades y proyectos.",
    imagen: kiuboImg,
    tags: ["Figma", "Illustrator", "Astro", "UX UI"],
    url: "#"
  },
  {
    titulo: "My Casino Gold",
    descripcion: "Pr√°ctica profesional como dise√±adora de la app, creadora de im√°genes para publicidad y community manager.",
    imagen: kiuboImg,
    tags: ["Figma", "Illustrator", "Photoshop"],
    url: "#"
  },
  {
    titulo: "Castiza Beer",
    descripcion: "Proyecto de branding y dise√±o de interfaz para una cervecer√≠a artesanal.",
    imagen: kiuboImg,
    tags: ["Figma", "IA", "Photoshop", "UX UI"],
    url: "#"
  }
];
---

<section class="proyectos-container" id="proyectos">
    <h2 class="titulo-seccion">Proyectos üíª</h2>
    
    <div class="proyectos-lista">
        {proyectosData.map(proyecto => (
            <article class="proyecto-item">
                
                <div class="proyecto-info entradaDesdeIzquierda-style">
                    <h3 class="proyecto-titulo">{proyecto.titulo}</h3>
                    <p class="proyecto-descripcion">{proyecto.descripcion}</p>
                    <div class="tags-container">
                        {proyecto.tags.map(tag => <span class="card-tag">{tag}</span>)}
                    </div>
                    <a href={proyecto.url} class="ver-proyecto-button">
                        <span>Ver proyecto</span>
                        <i class="fas fa-arrow-right"></i>
                    </a>
                </div>

                <a href={proyecto.url} class="proyecto-imagen-enlace entradaDesdeDerecha-style">
                    <Image src={proyecto.imagen} alt={`Vista previa del proyecto ${proyecto.titulo}`} class="proyecto-imagen"/>
                </a>

            </article>
        ))}
    </div>
</section>

<style>
/* --- Contenedores Principales --- */
.proyectos-container {
    font-family: 'Alexandria Variable', sans-serif;
    padding: 30px 150px 200px;
    margin: 0 auto;
    box-sizing: border-box;
    max-width: 1920px;
}

.titulo-seccion {
    color: white;
    font-size: clamp(36px, 5vw, 60px);
    margin-bottom: 20px;
}

.proyectos-lista {
    display: flex;
    flex-direction: column;
    gap: 150px;
}

/* --- Estructura de cada Proyecto (Desktop) --- */
.proyecto-item {
    display: flex;
    gap: 50px;
    align-items: center;
}

/* L√≥gica para alternar el orden en elementos pares */
.proyecto-item:nth-child(even) {
    flex-direction: row-reverse;
}

.proyecto-info {
    flex: 1;
    color: white;
}

.proyecto-imagen-enlace {
    flex: 1.2; 
    display: block;
}

.proyecto-imagen {
    width: 100%;
    height: auto;
    display: block;
}

/* --- Estilos de Texto, Tags y Bot√≥n (Sin cambios mayores) --- */
.proyecto-titulo {
    font-size: clamp(2rem, 4vw, 2.5rem);
    margin-bottom: 20px;
}

.proyecto-descripcion {
    font-size: clamp(16px, 1.5vw, 20px);
    line-height: 1.6;
    margin-bottom: 30px;
}

.tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 30px;
}

.card-tag {
    display: inline-block;
    font-size: 0.8rem;
    font-weight: bold;
    padding: 5px 12px;
    border-radius: 5px;
    background-color: rgba(67, 39, 191, 0.15);
    color: #8A78F5;
}

.ver-proyecto-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background-color: #4327BF;
    border: 1px solid #4327BF;
    color: white;
    padding: 10px 20px;
    font-weight: 600;
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.3s ease;
}
.ver-proyecto-button:hover {
    background-color: #5a40d8;
}
.ver-proyecto-button .fas {
    transition: transform 0.3s ease-in-out;
}
.ver-proyecto-button:hover .fas {
    transform: translateX(5px);
}

/* --- L√ìGICA RESPONSIVE CORREGIDA --- */
@media (max-width: 1024px) {
    .proyectos-container {
        padding: 40px 20px 200px;
    }
    
    .proyectos-lista {
        gap: 100px;
    }
    
    .proyecto-item,
    .proyecto-item:nth-child(even) {
        flex-direction: column;
        gap: 30px;
    }

    .proyecto-imagen-enlace {
        order: -1;
        width: 100%;
    }

    .tags-container, .ver-proyecto-button {
        margin-left: auto;
        margin-right: auto;
    }
}

@media (max-width: 768px) {
    .proyectos-container {
        padding: 40px 20px  200px;
    }
    .titulo-seccion {
        margin-bottom: 60px;
    }
}
</style>

<script>
// El script de IntersectionObserver se mantiene igual
document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
        root: null, 
        rootMargin: '0px 0px -100px 0px', 
        threshold: 0.05 
    };
    const sectionsToAnimate = document.querySelectorAll('.entradaDesdeIzquierda-style, .entradaDesdeDerecha-style');
    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('is-visible');
                entry.target.classList.remove('is-hidden'); 
            } else {
                entry.target.classList.remove('is-visible');
                entry.target.classList.add('is-hidden'); 
            }
        });
    }, observerOptions);
    sectionsToAnimate.forEach(section => {
        observer.observe(section);
    });
});
</script>
