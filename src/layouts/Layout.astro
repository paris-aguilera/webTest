---
import '@fontsource-variable/alexandria';
import '@fontsource/bebas-neue';
import "../styles/global.css";
interface Props {
    title: string;
}

const {title} = Astro.props;
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    
    <body> 
        <header>
            <div class="header-container">
                <nav>
                    <div class="menuList">
                        <ul>
                            <li>
                                <a href="#sobre-mi" class="smooth-scroll">SOBRE MI</a>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <a href="#proyectos" class="smooth-scroll">PROYECTOS</a>
                            </li> 
                        </ul>    
                        <ul>
                            <li>
                                <a href="#contacto" class="smooth-scroll">CONTACTO</a>
                            </li> 
                        </ul>    
                    </div>  
                </nav>  
            </div>
        </header>
        <slot />
    </body>
</html>

<style>
    /* -------------------------------------- */
    /* 1. ARREGLO DE ANCHO Y ALINEACIÓN DEL HEADER */
    /* -------------------------------------- */
    /* Esto debe ir en el CSS de tu layout principal (donde está el <html> o <body>) */
html, body {
    overflow-x: hidden;
    /* Esto previene que aparezca la barra horizontal cuando un elemento usa 100vw */
}
    header{
        font-family: 'Bebas Neue', sans-serif;
        color: white;
        font-weight:lighter;
        
        /* Mantenemos padding vertical, el horizontal lo ponemos en el container */
        padding: 25px 0 100px 0px; 
        
        /* CLAVE: Rompe el padding del body forzando el 100% del viewport */
        width: 100vw !important; 
        position: relative !important; 
        left: 50% !important;
        right: 50% !important;
        margin-left: -50vw !important; 
        margin-right: -50vw !important;
        box-sizing: border-box;
    } 

    .header-container {
        /* CLAVE: Aplica el padding de 13% para alinear el contenido con el body */
        padding-inline: 13%; 
        width: 100%;
        margin: 0 auto;
        display: flex; 
        justify-content: flex-end; 
        align-items: center; 
        box-sizing: border-box;
    }
    
    /* -------------------------------------- */
    /* 2. ESTILOS DEL MENÚ */
    /* -------------------------------------- */
    
    .menuList {
        display: flex; 
        align-items: center; 
        margin-left: auto;
    }

    .menuList ul {
        list-style: none; 
        margin: 0;
        display: flex;
    }

    .menuList li {
        list-style: none;
        margin: 0;
        padding: 0;
    }
    
    .menuList a {
        cursor: pointer;
        font-size: clamp(20px, 2.5vw, 30px); 
        width: 100%;
        text-decoration: none;
        color: inherit;
        padding: 0px 15px 0px 15px; 
        display: block;
        transition: color 0.3s ease;
        position: relative; 
        overflow: hidden;

        &:hover {
            color: white; 
        }
    }
    
    .menuList a::after {
        content: ''; 
        position: absolute;
        bottom: 0;
        left: 0;
        height: 2px;
        background-color: white;
        width: 0;
        transition: width 0.2s ease-out; 
    }

    .menuList a:hover::after {
        width: 100%;
    }

    nav {
        width: 100%;
        display: flex;
        justify-content: flex-end; 
    }
    
    /* -------------------------------------- */
    /* 3. ESTILOS DEL BODY (SE MANTIENEN TUS ESTILOS) */
    /* -------------------------------------- */
    
    body {
        /* Eliminamos 'scroll-behavior: smooth' ya que lo manejamos con JS */
        margin: 0;
        font-family: 'Alexandria Variable', sans-serif;
        background: linear-gradient(to bottom, #010005, #1B1843);
        background-size: 400% 400%;
        animation: gradient 5s ease infinite;      
        width: 100%;
        padding: 2% 13% 0% 13%; /* Padding lateral de tu layout */
    }

    @keyframes gradient {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    
    /* -------------------------------------- */
    /* 4. RESPONSIVE */
    /* -------------------------------------- */

    @media (max-width: 768px) {
        header{
            padding: 25px 0 50px 0px;
        }
        
        .header-container {
            /* Asumiendo que el padding del body es menor en móvil, p. ej., 5% */
            padding-inline: 5%; 
            justify-content: center; 
        }

        .menuList {
            margin-left: 0;
            flex-wrap: wrap; 
            justify-content: center;
            width: 100%;
        }
        
        .menuList ul {
            padding: 0 5px; 
        }
        
        .menuList a {
            padding: 0 5px; 
        }

        nav {
            justify-content: center;
        }
    }
</style>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        // Selecciona todos los enlaces con la clase 'smooth-scroll'
        const links = document.querySelectorAll('a.smooth-scroll');

        links.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();

                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);

                if (targetElement) {
                    // Usa scrollIntoView con 'smooth' para el efecto gradual
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start' // Alinea el elemento con el inicio del viewport
                    });
                }
            });
        });
    });
</script>